{
    "AvailabilityDump": {
        "dimension": "Availability",
        "metric_id": "A2",
        "metric": "Accessibility of the RDF dumps",
        "measure": 0,
        "shape": "ex:AvailabilityDumpShape",
        "message": "The dataset must provide an accessible RDF dump that can be downloaded.",
        "description": "Verifies whether an RDF dump is provided in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of an RDF dump, otherwise 0.",
        "shape_template": "ex:AvailabilityDumpShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:or (\\n\\t\\t[\\n\\t\\t\\tsh:path void:dataDump ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t\\t[\\n\\t\\t\\tsh:path (dcat:distribution dcat:downloadURL) ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t) ."
    },
    "MachineReadableLicense": {
        "dimension": "Licensing",
        "metric_id": "L1",
        "metric": "Machine-readable indication of a license in the VoID description.",
        "measure": 0,
        "shape": "ex:MachineReadableShape",
        "message": "The dataset must provide a machine readable indication of a license",
        "description": "Verifies if there's an indication of a machine-readable indication of a license in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has a machine-readable indication of a license, otherwise 0.",
        "shape_template": "ex:MachineReadableLicenseShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path dcterms:license ;\\n\\t\\tsh:class dcterms:LicenseDocument ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ."
    },
    "AuthenticityOfDataset": {
        "dimension": "Security",
        "metric_id": "S2",
        "metric": "Authenticity of the dataset",
        "measure": 0,
        "shape": "ex:AuthenticityDatasetSourceShape & ex:AuthenticityDatasetAuthorShape",
        "message": "The dataset should specify the origin of the data",
        "description": "Verifies there's someone responsible for the data (creator, contributor or publisher) and indication of the origin of the data (source or provenance) in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has indication of someone responsible for the data, as well as indication of the origin of the data; otherwise 0.",
        "shape_template": "ex:AuthenticityOfDatasetShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:or (\\n\\t\\t[ sh:path dcterms:contributor ; sh:minCount 1 ; ]\\n\\t\\t[ sh:path dcterms:creator ; sh:minCount 1 ; ]\\n\\t\\t[ sh:path dcterms:publisher ; sh:minCount 1 ; ]\\n\\t) ;\\n\\tsh:or (\\n\\t\\t[ sh:path dcterms:source ; sh:minCount 1 ; ]\\n\\t\\t[ sh:path dcterms:provenance ; sh:minCount 1 ; ]\\n\\t) ."
    },
    "PresenceMetadata": {
        "dimension": "Understandability",
        "metric_id": "U1",
        "metric": "Human-readable labelling of classes, properties and entities as well as presence of metadata.",
        "measure": 1,
        "shape": "ex:MetadataShapes",
        "message": "",
        "description": "Verifies the presence of a title, description and homepage in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description contains a title, description and homepage, otherwise 0.",
        "shape_template": "ex:UnderstandabilityDatasetMetadataShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path dcterms:title ;\\n\\t\\tsh:minCount 1 ;\\n\\t\\tsh:nodeKind sh:Literal ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path dcterms:description ;\\n\\t\\tsh:minCount 1 ;\\n\\t\\tsh:nodeKind sh:Literal ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path foaf:homepage ;\\n\\t\\tsh:minCount 1 ;\\n\\t\\tsh:class foaf:Document ;\\n\\t] ."
    },
    "ExemplaryResources": {
        "dimension": "Understandability",
        "metric_id": "U2",
        "metric": "Indication of one or more exemplary URIs",
        "measure": 1,
        "shape": "ex:ExemplaryResourceShape",
        "message": "",
        "description": "Verifies if there's an indication of at least one exemplary URI in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of an exemplary URI, otherwise 0.",
        "shape_template": "ex:UnderstandabilityExtraMetadataShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path void:exampleResource ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path void:vocabulary ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:or (\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriRegexPattern ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriSpace ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t\\tsh:nodeKind sh:Literal ;\\n\\t\\t]\\n\\t) ."
    },
    "URIRegexPressence": {
        "dimension": "Understandability",
        "metric_id": "U3",
        "metric": "Indication of a regular expression that matches the URIs of a dataset",
        "measure": 1,
        "shape": "ex:URIRegexPressenceShape",
        "message": "",
        "description": "Verifies if there's an indication of a regular expression for the URIs of the dataset, in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of a regular expression for the URIs, otherwise 0.",
        "shape_template": "ex:UnderstandabilityExtraMetadataShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path void:exampleResource ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path void:vocabulary ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:or (\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriRegexPattern ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriSpace ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t\\tsh:nodeKind sh:Literal ;\\n\\t\\t]\\n\\t) ."
    },
    "URISpacePressence": {
        "dimension": "Understandability",
        "metric_id": "U3",
        "metric": "Indication of a regular expression that matches the URIs of a dataset",
        "measure": 1,
        "shape": "ex:URIRegexPressenceShape",
        "message": "",
        "description": "Verifies if there's an indication of the URI namespace for the URIs of the dataset, in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of the URI namespace, otherwise 0.",
        "shape_template": "ex:UnderstandabilityExtraMetadataShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path void:exampleResource ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path void:vocabulary ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:or (\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriRegexPattern ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriSpace ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t\\tsh:nodeKind sh:Literal ;\\n\\t\\t]\\n\\t) ."
    },
    "VocabularyExistence": {
        "dimension": "Understandability",
        "metric_id": "U5",
        "metric": "Indication of the vocabularies used in the dataset",
        "measure": 1,
        "shape": "ex:VocabularyExistenceShape",
        "message": "",
        "description": "Verifies if a list of vocabularies used in the dataset is provided in the VoID description of the dataset.",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of the vocabularies used in the dataset, otherwise 0.",
        "shape_template": "ex:UnderstandabilityExtraMetadataShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path void:exampleResource ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:property [\\n\\t\\tsh:path void:vocabulary ;\\n\\t\\tsh:minCount 1 ;\\n\\t] ;\\n\\tsh:or (\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriRegexPattern ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t]\\n\\t\\t[\\n\\t\\t\\tsh:path void:uriSpace ;\\n\\t\\t\\tsh:minCount 1 ;\\n\\t\\t\\tsh:nodeKind sh:Literal ;\\n\\t\\t]\\n\\t) ."
    },
    "SerializationFormats": {
        "dimension": "Versatility",
        "metric_id": "V1",
        "metric": "Provision of the data in different serialization formats",
        "measure": 0,
        "shape": "ex:SerializationFormatsShape",
        "message": "The property is present but the value is incorrect.",
        "description": "Verifies if the data is provided in different serialization formats, by checking the VoID description of the dataset",
        "metric_type": "binary",
        "metric_calculation": "1 if the VoID description has an indication of the serialization formats, otherwise 0.",
        "shape_template": "ex:SerializationFormatsShape\\n\\ta sh:NodeShape ;\\n\\tsh:targetClass void:Dataset ;\\n\\tsh:property [\\n\\t\\tsh:path void:feature ;\\n\\t\\tsh:minCount 1 ;\\n\\t\\tsh:maxCount 5 ;\\n\\t\\tsh:in (\\n\\t\\t\\t<http://www.w3.org/ns/formats/N3>\\n\\t\\t\\t<http://www.w3.org/ns/formats/N-Triples>\\n\\t\\t\\t<http://www.w3.org/ns/formats/RDF_XML>\\n\\t\\t\\t<http://www.w3.org/ns/formats/RDFa>\\n\\t\\t\\t<http://www.w3.org/ns/formats/Turtle>\\n\\t\\t) ;\\n\\t] ."
    }
}