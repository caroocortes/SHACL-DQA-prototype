{% macro metadata_shape(metadata_class) -%}
ex:DatasetMetadataShape
    a sh:NodeShape ;
    sh:targetClass <{{metadata_class}}> ;
    sh:property [ 
        sh:path dcterms:title ;
        sh:minCount 1 ;
        sh:nodeKind sh:Literal;
        sh:message "DatasetMetadata - The dataset should specify a title, description and web page";
    ];
    sh:property [
        sh:path dcterms:description ;
        sh:minCount 1 ;
        sh:nodeKind sh:Literal;
        sh:message "DatasetMetadata - The dataset should specify a title, description and web page";
    ];
    sh:property [
        sh:path foaf:homepage ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI;
        sh:message "DatasetMetadata - The dataset should specify a title, description and web page";
    ];
    sh:property [
        sh:path void:exampleResource ;
        sh:minCount 1 ;
        sh:message "DatasetMetadata - The dataset should specify an example of an exemplary resource";
    ];
    sh:property[
        sh:path void:vocabulary ;
        sh:minCount 1 ;
        sh:message "DatasetMetadata - The dataset should specify a list of the vocabularies used";
    ];
    sh:property [
        sh:path void:uriRegexPattern ;
        sh:minCount 1 ;
        sh:message "DatasetMetadata - The dataset should specify a regex that matches the URIs of the entities";
    ];
    sh:property [
        sh:path void:uriSpace ;
        sh:nodeKind sh:Literal;
        sh:minCount 1 ;
        sh:message "DatasetMetadata - The dataset should specify a URI namespace used for the entities";
    ];
    sh:property [
        sh:message "DatasetMetadata - The dataset must provide a machine readable indication of a license";
        sh:path dcterms:license ;
        sh:class dcterms:LicenseDocument;
        sh:minCount 1 ;
    ];
    sh:property [
        sh:path void:feature;
        sh:minCount 1;
        sh:maxCount 5;
        sh:message "DatasetMetadata - The dataset's metadata should specify the serialization formats in which the data is available";
        sh:in (
            <http://www.w3.org/ns/formats/N3>
            <http://www.w3.org/ns/formats/N-Triples>
            <http://www.w3.org/ns/formats/RDF_XML>
            <http://www.w3.org/ns/formats/RDFa>
            <http://www.w3.org/ns/formats/Turtle>
        );
    ].

ex:AvailabilityDumpShape
    a sh:NodeShape;
    sh:targetClass <{{metadata_class}}>;
    sh:or (
        [
            sh:path void:dataDump ;
            sh:minCount 1 ;
            sh:message "AvailabilityDump - The dataset must provide an accessible RDF dump that can be downloaded.";
        ] 
        [
            sh:path ( dcat:distribution dcat:downloadURL );
            sh:minCount 1 ;
            sh:message "AvailabilityDump - The dataset must provide an accessible RDF dump that can be downloaded";
        ]
    ).

ex:AuthenticityOfDatasetSourceShape
    a sh:NodeShape ;
    sh:targetClass <{{metadata_class}}> ;
    sh:or (
        [
            sh:path dcterms:source ;
            sh:minCount 1 ;
            sh:message "AuthenticityOfDatasetSource - The dataset should specify the origin of the data";
        ]
        [
            sh:path dcterms:provenance ;
            sh:minCount 1 ;
            sh:message "AuthenticityOfDatasetSource - The dataset should specify the origin of the data";
        ]
    ).

ex:AuthenticityOfDatasetAuthorShape
    a sh:NodeShape ;
    sh:targetClass <{{metadata_class}}> ;
    sh:or (
        [
            sh:path dcterms:contributor ;
            sh:minCount 1 ;
            sh:message "AuthenticityOfDatasetAuthor - The dataset should specify a contributor, creator or publisher";
        ]
        [
            sh:path dcterms:creator ;
            sh:minCount 1 ;
            sh:message "AuthenticityOfDatasetAuthor - The dataset should specify a contributor, creator or publisher";
        ]
        [
            sh:path dcterms:publisher ;
            sh:minCount 1 ;
            sh:message "AuthenticityOfDatasetAuthor - The dataset should specify a contributor, creator or publisher";
        ]
    ).
{%- endmacro %}